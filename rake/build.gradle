buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'me.tatarka:gradle-retrolambda:3.1.0'
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 21
    buildToolsVersion '21.0.1'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "0.4"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

retrolambda {
    jdk System.getenv("JAVA8_HOME")
    oldJdk System.getenv("JAVA6_HOME")
    javaVersion JavaVersion.VERSION_1_6
    jvmArgs '-noverify'
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'org.json:json:20141113'
    compile 'io.reactivex:rxjava:1.0.11'
    testCompile fileTree(dir: 'src/test/libs', include: ['*.jar'])
    testCompile 'org.robolectric:robolectric:3.0-rc3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.squareup.okhttp:mockwebserver:2.3.0'
    testCompile 'commons-io:commons-io:2.4'
}

def configFilePath = project.buildscript.sourceFile.parent +
        "/src/main/java/com/skp/di/rake/client/config/RakeMetaConfig.java"

task updateRakeVersion(type: Copy) {

    String v = android.defaultConfig.versionName

    def pattern = ~/"android_(.)*"/
    def newVersion = "\"android_${v}\""

    def configFile = new File(configFilePath)

    String content = configFile.getText('UTF-8')
    content = content.replaceAll(pattern, newVersion) /* replace version number */

    // validate rake version
    String replacedVersion = content.find(pattern)
    assert(newVersion == replacedVersion)

    configFile.write(content, 'UTF-8')

    println "[INFO] version number in RakeMetaConfig.java replace with $v"
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn updateRakeVersion }
